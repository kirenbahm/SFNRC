% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/getCoordsDBHYDRO.R
\name{getCoords_DBHYDRO}
\alias{getCoords_DBHYDRO}
\title{Retrieve station coordinates from DBHYDRO}
\usage{
getCoords_DBHYDRO(stn = "LASPALM11")
}
\arguments{
\item{stn}{character string. Case sensitive.}
}
\value{
dataframe \code{getCoords_DBHYDRO} returns a dataframe with lat/long (epsg:4326) and UTM zone 19 coordinates.
}
\description{
Downloads DBHYDRO station coordinate data. Note that these coordinates may be incorrect in DBHYDRO (e.g., LASPALM12 appears right next to LPG1, when in reality it is ~500 meters north).
}
\examples{
\dontrun{
### example usage as part of a workflow

SMA.keys <- c(
37737, # LPG1
37740, # LPG2
39288, # LASPALM11
39289, # LASPALM12
39290, # LASPALM13
39291, # LASPALM14
39292, # LASPALM15 
"07103", # ANGEL
"05738", # G-3273 
"WN173",  # S357_H
"AM177"  # S357N_H
)
SMAlist    <- lapply(X = SMA.keys, getDBHYDROhydro, startDate = "20200101", 
     endDate = "20200901")
SMADat     <- do.call(rbind, SMAlist)
sma.coords <- do.call(rbind, lapply(X = unique(SMADat$stn), getCoords_DBHYDRO))

### convert to spatial data and plot
sma.crds           <- sma.coords[!is.na(sma.coords$latitude), ]
sma.crds$longitude <- -1 * sma.crds$longitude
coordinates(sma.crds) <- c("longitude", "latitude")
proj4string(sma.crds) <- CRS("+init=epsg:4326")

plot(sma.crds)
}

}
