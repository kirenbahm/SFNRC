% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/biscInterp.R
\name{biscInterp}
\alias{biscInterp}
\title{Make interpolated maps of Biscayne Bay}
\usage{
biscInterp(inputData, paramCol = "SALINITY", yearCol = "year",
  year = "2016", returnRas = FALSE, exportRaster = FALSE,
  fileName = "NA.tif", BISCmap = SFNRC::bnp, exportPlot = FALSE,
  plotName = "NA.png", plotWidth = 4, plotHeight = 5,
  plotRes = 200, plotZLims = c(10, 40))
}
\arguments{
\item{inputData}{dataframe with water quality data. Function works best with output of \code{dfe.wq() or dfe.hydro()} using \code{wide = TRUE}.}

\item{paramCol}{character string, name of column containing the relevant water quality data}

\item{yearCol}{character string, name of column indicating relevant temporal divisions}

\item{year}{time period to be used for the plot (subset from \code{yearCol}, above).}

\item{returnRas}{TRUE/FALSE; should a raster layer be returned to the global environment}

\item{exportRaster}{TRUE/FALSE; should a raster layer be saved to disk?}

\item{fileName}{if a raster layer is exported, this argument sets the file address and name}

\item{BISCmap}{SpatialPolygonDataFrame layer with outline of Biscayne Bay (data included in SNFRC package)}

\item{exportPlot}{TRUE/FALSE; should the displayed plot be saved to disk?}

\item{plotName}{if the plot is exported, this argument sets the file address and name}

\item{plotWidth}{width of the plot}

\item{plotHeight}{height of the plot}

\item{plotRes}{resolution of the plot}

\item{plotZLims}{range for colors plotted in figure. This is useful for standardizing when multiple plots are being produced.}
}
\value{
plot, raster layer, and/or raster data
}
\description{
Make interpolated maps of Biscayne Bay
}
\examples{
 
fin2 <- reshape2::dcast(finDat[, -c(4, 7)], stn + date + year ~ param) # long to wide
agm <- plyr::ddply(fin2[, -c(2)], plyr::.(year, stn), plyr::numcolwise(geoMean))
names(agm) <- gsub(x = names(agm), pattern = " ", replacement = "")
names(agm) <- gsub(x = names(agm), pattern = ",", replacement = "")
finDat.coords <- join_all(list(agm, masterCoords), by = "stn")
finDat.coords <- finDat.coords[!is.na(finDat.coords$long), ]
coordinates(finDat.coords) <- c("long", "lat")
proj4string(finDat.coords) <- CRS("+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0")

sitesInBay <- over(finDat.coords, bnp)
sitesInBay <- finDat.coords[complete.cases(sitesInBay), ]

biscInterp(inputData = finDat.coords[(finDat.coords@data$stn \%in\% sitesInBay@data$stn), ],
    param = "SALINITY", year = "2016")


}
